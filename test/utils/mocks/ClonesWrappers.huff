#define function clone(address) returns (address)
#define function cloneDeterministic(address,bytes32) returns (address)
#define function predictDeterministicAddress(address,bytes32) returns (address)

#define macro CLONE_WRAPPER() = {
    0x04 calldataload                   // [implementation]
    CLONE()                             // [address]
    0x00 mstore                         // []
    0x20 0x00 return                    // return address
}

#define macro CLONE_DETERMINISTIC_WRAPPER() = {
    0x24 calldataload                   // [salt]
    0x04 calldataload                   // [implementation, salt]
    CLONE_DETERMINISTIC()               // [address]
    0x00 mstore                         // []
    0x20 0x00 return                    // return address
}

#define macro PREDICT_DETERMINISTIC_ADDRESS_WRAPPER() = {
    0x24 calldataload                   // [salt]
    0x04 calldataload                   // [implementation, salt]
    PREDICT_DETERMINISTIC_ADDRESS()     // [address]
    0x00 mstore                         // []
    0x20 0x00 return                    // return address
}

#define macro MAIN() = {
    pc calldata 0xe0 shr

    dup1 __FUNCSIG(clone)                       eq clone_jump jumpi
    dup1 __FUNCSIG(cloneDeteministic)           eq clone_deteministic_jump jumpi
    dup1 __FUNCSIG(predictDeterministicAddress) eq predict_deterministic_address_jump jumpi

    // Exit is selector does not match
    0x00 dup1  revert

    clone_jump:
        CLONE_WRAPPER()
    clone_deterministic_jump:
        CLONE_DETERMINISTIC_WRAPPER()
    predict_deterministic_address_jump:
        PREDICT_DETERMINISTIC_ADDRESS_WRAPPER()
}