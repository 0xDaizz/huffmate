// Interface
#define function mint(address, uint256) payable returns ()

/// >>>>>>>>>>>>>>>>>>>>>  EXTERNAL FUNCTIONS  <<<<<<<<<<<<<<<<<<<<<< ///

#define macro MINT() = takes (0) returns (0) {
    0x04 calldataload       // [tokenId]
    0x04 calldataload       // [to, tokenId]
    _MINT()
}

/* Main Macro - The contract entrypoint */
#define macro MAIN() = takes(0) returns (0) {
    // Identify which function is being called.
    0x00 calldataload 0xE0 shr
    dup1 0x40c10f19 eq mint jumpi
    dup1 0xa9059cbb eq transferFrom jumpi
    dup1 0x42842e0e eq safeTransferFrom jumpi
    dup1 0xb88d4fde eq safeTransferFromWithData jumpi
    dup1 0x095ea7b3 eq approve jumpi
    dup1 0xa22cb465 eq setApprovalForAll jumpi
    dup1 0x081812fc eq getApproved jumpi
    dup1 0x70a08231 eq balanceOf jumpi
    dup1 0x6352211e eq ownerOf jumpi
    dup1 0x06fdde03 eq name jumpi
    dup1 0x95d89b41 eq symbol jumpi
    dup1 0xc87b56dd eq tokenURI jumpi
    dup1 0x01ffc9a7 eq supportsInterface jumpi
    dup1 0xe985e9c5 eq isApprovedForAll jumpi

    mint:
        MINT()
    transferFrom:
        TRANSFER_FROM()
    safeTransferFrom:
        SAFE_TRANSFER_FROM()    // not implemented yet
    safeTransferFromWithData:
        SAFE_TRANSFER_FROM_WITH_DATA()  // not implemented yet
    balanceOf:
        BALANCE_OF()
    approve:
        APPROVE()
    getApproved:
        GET_APPROVED()
    setApprovalForAll:
        SET_APPROVAL_FOR_ALL()
    name:
        NAME()
    symbol:
        SYMBOL()
    tokenURI:
        TOKEN_URI()             // not implemented yet
    supportsInterface:
        SUPPORTS_INTERFACE()
    isApprovedForAll:
        IS_APPROVED_FOR_ALL()
    ownerOf:
        OWNER_OF()
}