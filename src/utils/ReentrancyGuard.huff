/// @title Reentrancy Guard
/// @author rayquaza7
/// @notice A Reentrancy Guard based off <https://github.com/Rari-Capital/solmate/blob/main/src/utils/ReentrancyGuard.sol>
/// @license Apache License, Version 2.0

#include "./CommonErrors.huff"

// Constants
#define constant _UNLOCKED = 0x01
#define constant _LOCKED = 0x02
#define constant LOCKED_SLOT = FREE_STORAGE_POINTER()

/// @title Lock
/// @notice Locks the contract to prevent reentrancy
#define fn LOCK() = takes (0) returns (0) {
    [_LOCKED]                // [0x02]
    dup1                     // [0x02, 0x02]
    [LOCKED_SLOT]            // [locked_slot, 0x02, 0x02]
    sload                    // [locked_slot_value, 0x02, 0x02]
    lt                       // [locked_slot_value < 0x02, 0x02]
    lock jumpi

    // Otherwise revert with re-entrancy
    REENTRANCY(0x00)

    lock:
        [LOCKED_SLOT] sstore
}

/// @title Unlock
/// @notice Unlocks the contract
#define fn UNLOCK() = takes (0) returns (0) {
    [_UNLOCKED] [LOCKED_SLOT] sstore
}
